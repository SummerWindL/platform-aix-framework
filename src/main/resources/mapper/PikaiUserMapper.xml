<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.platform.aix.common.datacommon.db.dao.PikaiUserMapper" >
  <resultMap id="BaseResultMap" type="com.platform.aix.common.datacommon.db.domain.PikaiUser" >
    <id column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="account_id" property="accountId" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="encryp_type" property="encrypType" jdbcType="VARCHAR" />
    <result column="user_info" property="userInfo" jdbcType="OTHER" />
    <result column="account_status" property="accountStatus" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_id, account_id, user_name, salt, password, encryp_type, user_info, account_status, 
    create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.platform.aix.common.datacommon.db.domain.PikaiUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_pikai_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_pikai_user
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_pikai_user
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.platform.aix.common.datacommon.db.domain.PikaiUserExample" >
    delete from t_pikai_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.platform.aix.common.datacommon.db.domain.PikaiUser" >
    insert into t_pikai_user (user_id, account_id, user_name, 
      salt, password, encryp_type, 
      user_info, account_status, create_time, 
      update_time)
    values (#{userId,jdbcType=VARCHAR}, #{accountId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{encrypType,jdbcType=VARCHAR}, 
      #{userInfo,jdbcType=OTHER}, #{accountStatus,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <select id="insertReturnEntity" parameterType="com.platform.aix.common.datacommon.db.domain.PikaiUser"  resultMap="BaseResultMap">
    insert into t_pikai_user (user_id, account_id, user_name,
      salt, password, encryp_type,
      user_info, account_status, create_time,
      update_time)
    values (#{userId,jdbcType=VARCHAR}, #{accountId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR},
      #{salt,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{encrypType,jdbcType=VARCHAR},
      #{userInfo,jdbcType=OTHER}, #{accountStatus,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP})
      RETURNING *
  </select>
  <insert id="insertSelective" parameterType="com.platform.aix.common.datacommon.db.domain.PikaiUser" >
    insert into t_pikai_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="salt != null" >
        salt,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="encrypType != null" >
        encryp_type,
      </if>
      <if test="userInfo != null" >
        user_info,
      </if>
      <if test="accountStatus != null" >
        account_status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="encrypType != null" >
        #{encrypType,jdbcType=VARCHAR},
      </if>
      <if test="userInfo != null" >
        #{userInfo,jdbcType=OTHER},
      </if>
      <if test="accountStatus != null" >
        #{accountStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.platform.aix.common.datacommon.db.domain.PikaiUserExample" resultType="java.lang.Integer" >
    select count(*) from t_pikai_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="findByAccountId" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List" />
    from t_pikai_user
    where account_id = #{email,jdbcType=VARCHAR}
  </select>
  <select id="existsByAccountId" resultType="java.lang.Boolean">
    select case when count(1) = 1 then true else false end as existsFlag from t_pikai_user where account_id = #{email,jdbcType=VARCHAR}
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_pikai_user
    <set >
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null" >
        account_id = #{record.accountId,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.salt != null" >
        salt = #{record.salt,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.encrypType != null" >
        encryp_type = #{record.encrypType,jdbcType=VARCHAR},
      </if>
      <if test="record.userInfo != null" >
        user_info = #{record.userInfo,jdbcType=OTHER},
      </if>
      <if test="record.accountStatus != null" >
        account_status = #{record.accountStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_pikai_user
    set user_id = #{record.userId,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      salt = #{record.salt,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      encryp_type = #{record.encrypType,jdbcType=VARCHAR},
      user_info = #{record.userInfo,jdbcType=OTHER},
      account_status = #{record.accountStatus,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.platform.aix.common.datacommon.db.domain.PikaiUser" >
    update t_pikai_user
    <set >
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="encrypType != null" >
        encryp_type = #{encrypType,jdbcType=VARCHAR},
      </if>
      <if test="userInfo != null" >
        user_info = #{userInfo,jdbcType=OTHER},
      </if>
      <if test="accountStatus != null" >
        account_status = #{accountStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.platform.aix.common.datacommon.db.domain.PikaiUser" >
    update t_pikai_user
    set account_id = #{accountId,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      encryp_type = #{encrypType,jdbcType=VARCHAR},
      user_info = #{userInfo,jdbcType=OTHER},
      account_status = #{accountStatus,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
</mapper>